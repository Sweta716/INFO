/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package secondAssignment.system.ui;

import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import secondAssignment.system.person.City;
import secondAssignment.system.person.DoctorDirectory;
import secondAssignment.system.person.Encounter;
import secondAssignment.system.person.Patient;
import secondAssignment.system.person.PatientDirectory;

/**
 *
 * @author sweta
 */
public class UpdatePatient extends javax.swing.JFrame {

    /**
     * Creates new form UpdatePatient
     */
    PatientDirectory pList;
    City city;
    DoctorDirectory plist;

    public UpdatePatient(PatientDirectory pList, City city,DoctorDirectory plist) {
        initComponents();
        this.pList = pList;
        this.city = city;
        this.plist = plist;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCloes = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDisplay = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtPatientID = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtHouse = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(280, 150));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnCloes.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCloes.setText("Close");
        btnCloes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloesActionPerformed(evt);
            }
        });
        getContentPane().add(btnCloes, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 456, 76, -1));

        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 456, 140, -1));

        jLabel9.setText("Update Patient");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 23, 122, -1));

        tblDisplay.setBackground(new java.awt.Color(242, 242, 242));
        tblDisplay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Patient ID", "Age", "Email", "House", "Community", "City", "Temperature", "Heart Rate", "Blood Pressure", "Respiratory Rate", "Weight", "TimeStamp"
            }
        ));
        jScrollPane1.setViewportView(tblDisplay);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 57, 768, 155));

        jLabel1.setText("PatientID");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 233, 69, -1));
        getContentPane().add(txtPatientID, new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 230, 131, -1));

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        getContentPane().add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(521, 230, 66, -1));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 230, 76, -1));

        jLabel2.setText("Name");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 316, 90, -1));

        jLabel3.setText("Age");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 344, 90, -1));

        jLabel4.setText("House");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 378, 90, -1));

        jLabel5.setText("Email");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 412, 90, -1));
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 313, 190, -1));
        getContentPane().add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 341, 190, -1));
        getContentPane().add(txtHouse, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 375, 190, -1));
        getContentPane().add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 409, 190, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/secondAssignment/system/ui/aa.jpeg"))); // NOI18N
        jLabel6.setText("jLabel6");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloesActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_btnCloesActionPerformed

            public static boolean updatePatientclientSideValidation(javax.swing.JFrame frame, String name, String age, String email, String houseno) {
        if (Pattern.compile("^[a-zA-Z\\s]*$").matcher(name).matches() && !name.equals("")) {
            System.out.println("Name is valid.");
            if (Pattern.compile("^[1-9]\\d*$").matcher(age).matches() && !age.equals("")) {
                System.out.println("Age is valid.");
               
                if (Pattern.compile("^[a-zA-Z0-9_+&-]+(?:\\.[a-zA-Z0-9_+&-]+)*"
                                    + "@" + "(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$").matcher(email).matches() && !email.equals("")) {
                    System.out.println("Email is valid.");
                    if (Pattern.compile("^[1-9]\\d*$").matcher(houseno).matches() && !houseno.equals("")) {
                        System.out.println("HouseNo is valid.");
                        return true;
                    } else {
                        JOptionPane.showMessageDialog(frame, "House No field is not valid.\\nOnly numbers are allowed.", "Alert", JOptionPane.WARNING_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(frame, "Email field is not in specified format", "Alert", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(frame, "Age field is not valid.\\nOnly numbers are allowed.", "Alert", JOptionPane.WARNING_MESSAGE);

            }

        } else {
            JOptionPane.showMessageDialog(frame, "Name field is not valid.\\nOnly characters and spaces are allowed.", "Alert", JOptionPane.WARNING_MESSAGE);
        }
        return false;
    }

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:

        String name=txtName.getText();
        String age = txtAge.getText();
        String email= txtEmail.getText();
        String houseNo=txtHouse.getText();
        boolean passed = updatePatientclientSideValidation(this,name,age,email,houseNo);
        
        if(passed){
        
        Integer iD = Integer.parseInt(txtPatientID.getText());
        Integer age1= Integer.parseInt(age);
        for (int i = 0; i < pList.getPatientList().size(); i++) {
            int patientid = (pList.getPatientList().get(i).getPatientID());
            if (iD == patientid) {
                pList.getPatientList().get(i).setName(txtName.getText());
                pList.getPatientList().get(i).setAge(age1);
                pList.getPatientList().get(i).setEmail(txtEmail.getText());
                pList.getPatientList().get(i).getHouse().setHouseNumber(houseNo);
                //TODO other details

            }
        }
        populateTable();
    }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        String id = txtPatientID.getText();
            if (Pattern.compile("^[1-9]\\d*$").matcher(id).matches() && !id.equals("")) {
        Integer iD = Integer.parseInt(id);
        for (int i = 0; i < pList.getPatientList().size(); i++) {
            int patientid = (pList.getPatientList().get(i).getPatientID());
            if (iD == patientid) {
                txtName.setText(pList.getPatientList().get(i).getName());
                txtAge.setText(pList.getPatientList().get(i).getAge().toString());
                //txtPatCity.setText(history.getpatientDirectory().get(i));
                txtEmail.setText(pList.getPatientList().get(i).getEmail());
                txtHouse.setText(pList.getPatientList().get(i).getHouse().getHouseNumber());
                //TODO other details
            }
        }
       }
            else{
                JOptionPane.showMessageDialog(this, "Patient ID field is not valid. Only numbers are allowed.", "Alert", JOptionPane.WARNING_MESSAGE);

            }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            Integer pID = Integer.parseInt(txtPatientID.getText());
            for (int i = 0; i < pList.getPatientList().size(); i++) {
                int patientid = (pList.getPatientList().get(i).getPatientID());
                if (pID == patientid) {
                    pList.deletePatient(pList.getPatientList().get(i));
                }
            }

        } catch (NumberFormatException nfe) {

        }
        populateTable();
    }//GEN-LAST:event_btnDeleteActionPerformed
    private void populateTable() {

        DefaultTableModel model = (DefaultTableModel) tblDisplay.getModel();
        model.setRowCount(0);

        for (int i = 0; i < pList.getPatientList().size(); i++) {

            Patient p = pList.getPatientList().get(i);

            for (Encounter e : p.getEncounterHistory().getEncounterHistory()) {
                Object[] object
                        = {
                            p.getName(),
                            p.getPatientID(),
                            p.getAge(),
                            p.getEmail(),
                            p.getHouse().getHouseNumber(),
                            p.getCommunity().getCommunityName(),
                            city.getCityName(),
                            e.getVitalSigns().getTemperature(),
                            e.getVitalSigns().getHR(),
                            e.getVitalSigns().getBloodPressure(),
                            e.getVitalSigns().getRespiratoryRate(),
                            e.getVitalSigns().getWeight(),
                            e.getDateOfEncounter()
                        };
                model.addRow(object);
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    //    public static void main(String args[]) {
    //        /* Set the Nimbus look and feel */
    //        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    //        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
    //         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
    //         */
    //        try {
    //            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
    //                if ("Nimbus".equals(info.getName())) {
    //                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
    //                    break;
    //                }
    //            }
    //        } catch (ClassNotFoundException ex) {
    //            java.util.logging.Logger.getLogger(UpdatePatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    //        } catch (InstantiationException ex) {
    //            java.util.logging.Logger.getLogger(UpdatePatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    //        } catch (IllegalAccessException ex) {
    //            java.util.logging.Logger.getLogger(UpdatePatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    //        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
    //            java.util.logging.Logger.getLogger(UpdatePatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    //        }
    //        //</editor-fold>
    //
    //        /* Create and display the form */
    //        java.awt.EventQueue.invokeLater(new Runnable() {
    //            public void run() {
    //                new UpdatePatient().setVisible(true);
    //            }
    //        });
    //    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCloes;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDisplay;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHouse;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPatientID;
    // End of variables declaration//GEN-END:variables
}
