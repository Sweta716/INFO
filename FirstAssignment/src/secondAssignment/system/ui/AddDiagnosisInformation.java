/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package secondAssignment.system.ui;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import secondAssignment.system.person.City;
import secondAssignment.system.person.DoctorDirectory;
import secondAssignment.system.person.Encounter;
import secondAssignment.system.person.EncounterHistory;
import secondAssignment.system.person.PatientDirectory;
import secondAssignment.system.person.VitalSigns;

/**
 *
 * @author sweta
 */
public class AddDiagnosisInformation extends javax.swing.JFrame {

    //public int flag = 0;
    /**
     * Creates new form AddDiagnosisInformation
     */
    PatientDirectory history;
    City city;
    DoctorDirectory dlist;

    public AddDiagnosisInformation(PatientDirectory history, City city, DoctorDirectory dlist) {
        initComponents();
        this.history = history;
        this.city = city;
        this.dlist = dlist;
//        lblHidden.setVisible(false);
//        lblWardType.setVisible(false);
//        cmbTypeWard.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtPatientID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtResperatory = new javax.swing.JTextField();
        txtBloodPressure = new javax.swing.JTextField();
        txtWeight = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtHeartRate = new javax.swing.JTextField();
        txtTemperature = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(280, 150));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Patient ID");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(98, 36, 102, -1));
        getContentPane().add(txtPatientID, new org.netbeans.lib.awtextra.AbsoluteConstraints(261, 33, 177, -1));

        jLabel3.setText("Resperatory");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 243, 94, -1));

        jLabel4.setText("Blood Pressure");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 283, 94, -1));

        jLabel5.setText("Heart Rate");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 323, 94, -1));
        getContentPane().add(txtResperatory, new org.netbeans.lib.awtextra.AbsoluteConstraints(106, 240, 165, -1));
        getContentPane().add(txtBloodPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(106, 280, 165, -1));
        getContentPane().add(txtWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(106, 348, 165, -1));

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        getContentPane().add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 410, -1, -1));

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(702, 410, -1, -1));

        jLabel7.setText("Weight");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 354, 94, -1));

        jLabel8.setText("Temperature");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 379, 94, -1));
        getContentPane().add(txtHeartRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(106, 320, 165, -1));
        getContentPane().add(txtTemperature, new org.netbeans.lib.awtextra.AbsoluteConstraints(106, 376, 165, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/secondAssignment/system/ui/bb.jpeg"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 780, 510));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_btnCloseActionPerformed

    public static boolean addDiagnosisInfoclientSideValidation(javax.swing.JFrame frame, String id, String pulse, String bt, String respiration, String weight, String bp) {
        if (Pattern.compile("^[1-9]\\d*$").matcher(id).matches() && !id.equals("")) {
            System.out.println("Patient ID field is valid.");
            if (Pattern.compile("^[1-9]\\d*$").matcher(respiration).matches() && !respiration.equals("")) {
                System.out.println("Respiration field is valid.");
                if (Pattern.compile("^[1-9]\\d*$").matcher(bp).matches() && !bp.equals("")) {
                    System.out.println("Blood pressure field is valid.");
                    if (Pattern.compile("^[1-9]\\d*$").matcher(pulse).matches() && !pulse.equals("")) {
                        System.out.println("Heart Rate field is valid.");
                        if (Pattern.compile("^[1-9]\\d*$").matcher(weight).matches() && !weight.equals("")) {
                            System.out.println("Weight field is valid.");

                            if (Pattern.compile("^[1-9]\\d*$").matcher(bt).matches() && !bt.equals("")) {
                                System.out.println("Temperature field is valid.");
                                return true;

                            } else {
                                JOptionPane.showMessageDialog(frame, "Temperature field is not valid. Only Numbers are allowed..", "Alert", JOptionPane.WARNING_MESSAGE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(frame, "Weight field is not valid. Only Numbers are allowed..", "Alert", JOptionPane.WARNING_MESSAGE);
                        }

                    } else {
                        JOptionPane.showMessageDialog(frame, "Heart rate field is not valid. Only Numbers are allowed..", "Alert", JOptionPane.WARNING_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(frame, "Blood pressure field is not valid. Only Numbers are allowed..", "Alert", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(frame, "Respiration field is not valid. Only Numbers are allowed..", "Alert", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(frame, " Patient ID field is not valid. Only Numbers are allowed..", "Alert", JOptionPane.WARNING_MESSAGE);
        }
        return false;
    }


    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:

//        if (flag == 1) {
        String id = txtPatientID.getText();
        String bp = txtBloodPressure.getText();
        String pulse = txtHeartRate.getText();
        String bt = txtTemperature.getText();
        String respiration = txtResperatory.getText();
        String weight = txtWeight.getText();
        String timestamp = new SimpleDateFormat("MM/dd/yyyy hh:mm:ss").format(Calendar.getInstance().getTime());
        boolean passed = addDiagnosisInfoclientSideValidation(this, id, pulse, bt, respiration, weight, bp);

        Integer id1 = Integer.parseInt(txtPatientID.getText());

        Integer bp1 = Integer.parseInt(txtBloodPressure.getText());
        Integer pulse1 = Integer.parseInt(txtHeartRate.getText());
        Integer bt1 = Integer.parseInt(txtTemperature.getText());
        Integer respiration1 = Integer.parseInt(txtResperatory.getText());
        Integer weight1 = Integer.parseInt(txtWeight.getText());
//            String wardReq;
//            String typeWard;
//            if (jCheckBox1.isSelected()) {
//                wardReq = "Yes";
//                typeWard = (String) cmbTypeWard.getSelectedItem();
//            } else {
//                wardReq = "No";
//                typeWard = "";
//            }
        // try {
        if (passed) {
            for (int i = 0; i < history.getPatientList().size(); i++) {
                int patientid = (history.getPatientList().get(i).getPatientID());
                if (id1 == patientid) {
                    EncounterHistory eh = history.getPatientList().get(i).getEncounterHistory();
                    VitalSigns signs = new VitalSigns(pulse1, bp1, weight1, respiration1, bt1);
                    Encounter encounter = new Encounter(signs, timestamp);
                    eh.addNewEncounter(encounter);

                    JOptionPane.showMessageDialog(this, "New vitals added for the patient.");
                    //update the info to that patient
                    JOptionPane.showMessageDialog(null, "succesfully updated");
                    setVisible(false);
                    new AddDiagnosisInformation(history, city, dlist).setVisible(true);
                    // }
//                }
//                    }catch(Exception e){
//                JOptionPane.showMessageDialog(this, e);
//            }
                }
//else{
//            JOptionPane.showMessageDialog(null, "Patient Id field is empty");
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(AddDiagnosisInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(AddDiagnosisInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(AddDiagnosisInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(AddDiagnosisInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddDiagnosisInformation().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField txtBloodPressure;
    private javax.swing.JTextField txtHeartRate;
    private javax.swing.JTextField txtPatientID;
    private javax.swing.JTextField txtResperatory;
    private javax.swing.JTextField txtTemperature;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables
}
